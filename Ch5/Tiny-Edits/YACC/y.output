Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: stmt_seq

    2 stmt_seq: stmt_seq SEMI stmt
    3         | stmt

    4 stmt: if_stmt
    5     | repeat_stmt
    6     | assign_stmt
    7     | read_stmt
    8     | write_stmt
    9     | error

   10 if_stmt: IF exp THEN stmt_seq END
   11        | IF exp THEN stmt_seq ELSE stmt_seq END

   12 repeat_stmt: REPEAT stmt_seq UNTIL exp

   13 $@1: %empty

   14 assign_stmt: ID $@1 ASSIGN exp

   15 read_stmt: READ ID

   16 write_stmt: WRITE exp

   17 exp: simple_exp LT simple_exp
   18    | simple_exp EQ simple_exp
   19    | simple_exp LE simple_exp
   20    | simple_exp GT simple_exp
   21    | simple_exp GE simple_exp
   22    | simple_exp NE simple_exp
   23    | simple_exp

   24 simple_exp: simple_exp PLUS term
   25           | simple_exp MINUS term
   26           | term

   27 term: term TIMES factor
   28     | term OVER factor
   29     | factor

   30 factor: LPAREN exp RPAREN
   31       | NUM
   32       | ID
   33       | error


Terminals, with rules where they appear

$end (0) 0
error (256) 9 33
IF (258) 10 11
THEN (259) 10 11
ELSE (260) 11
END (261) 10 11
REPEAT (262) 12
UNTIL (263) 12
READ (264) 15
WRITE (265) 16
ID (266) 14 15 32
NUM (267) 31
ASSIGN (268) 14
EQ (269) 18
NE (270) 22
LE (271) 19
LT (272) 17
GE (273) 21
GT (274) 20
PLUS (275) 24
MINUS (276) 25
TIMES (277) 27
OVER (278) 28
LPAREN (279) 30
RPAREN (280) 30
SEMI (281) 2
ERROR (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
stmt_seq (30)
    on left: 2 3, on right: 1 2 10 11 12
stmt (31)
    on left: 4 5 6 7 8 9, on right: 2 3
if_stmt (32)
    on left: 10 11, on right: 4
repeat_stmt (33)
    on left: 12, on right: 5
assign_stmt (34)
    on left: 14, on right: 6
$@1 (35)
    on left: 13, on right: 14
read_stmt (36)
    on left: 15, on right: 7
write_stmt (37)
    on left: 16, on right: 8
exp (38)
    on left: 17 18 19 20 21 22 23, on right: 10 11 12 14 16 30
simple_exp (39)
    on left: 24 25 26, on right: 17 18 19 20 21 22 23 24 25
term (40)
    on left: 27 28 29, on right: 24 25 26 27 28
factor (41)
    on left: 30 31 32 33, on right: 27 28 29


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    IF      shift, and go to state 2
    REPEAT  shift, and go to state 3
    READ    shift, and go to state 4
    WRITE   shift, and go to state 5
    ID      shift, and go to state 6

    program      go to state 7
    stmt_seq     go to state 8
    stmt         go to state 9
    if_stmt      go to state 10
    repeat_stmt  go to state 11
    assign_stmt  go to state 12
    read_stmt    go to state 13
    write_stmt   go to state 14


State 1

    9 stmt: error .

    $default  reduce using rule 9 (stmt)


State 2

   10 if_stmt: IF . exp THEN stmt_seq END
   11        | IF . exp THEN stmt_seq ELSE stmt_seq END

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    exp         go to state 19
    simple_exp  go to state 20
    term        go to state 21
    factor      go to state 22


State 3

   12 repeat_stmt: REPEAT . stmt_seq UNTIL exp

    error   shift, and go to state 1
    IF      shift, and go to state 2
    REPEAT  shift, and go to state 3
    READ    shift, and go to state 4
    WRITE   shift, and go to state 5
    ID      shift, and go to state 6

    stmt_seq     go to state 23
    stmt         go to state 9
    if_stmt      go to state 10
    repeat_stmt  go to state 11
    assign_stmt  go to state 12
    read_stmt    go to state 13
    write_stmt   go to state 14


State 4

   15 read_stmt: READ . ID

    ID  shift, and go to state 24


State 5

   16 write_stmt: WRITE . exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    exp         go to state 25
    simple_exp  go to state 20
    term        go to state 21
    factor      go to state 22


State 6

   14 assign_stmt: ID . $@1 ASSIGN exp

    $default  reduce using rule 13 ($@1)

    $@1  go to state 26


State 7

    0 $accept: program . $end

    $end  shift, and go to state 27


State 8

    1 program: stmt_seq .
    2 stmt_seq: stmt_seq . SEMI stmt

    SEMI  shift, and go to state 28

    $default  reduce using rule 1 (program)


State 9

    3 stmt_seq: stmt .

    $default  reduce using rule 3 (stmt_seq)


State 10

    4 stmt: if_stmt .

    $default  reduce using rule 4 (stmt)


State 11

    5 stmt: repeat_stmt .

    $default  reduce using rule 5 (stmt)


State 12

    6 stmt: assign_stmt .

    $default  reduce using rule 6 (stmt)


State 13

    7 stmt: read_stmt .

    $default  reduce using rule 7 (stmt)


State 14

    8 stmt: write_stmt .

    $default  reduce using rule 8 (stmt)


State 15

   33 factor: error .

    $default  reduce using rule 33 (factor)


State 16

   32 factor: ID .

    $default  reduce using rule 32 (factor)


State 17

   31 factor: NUM .

    $default  reduce using rule 31 (factor)


State 18

   30 factor: LPAREN . exp RPAREN

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    exp         go to state 29
    simple_exp  go to state 20
    term        go to state 21
    factor      go to state 22


State 19

   10 if_stmt: IF exp . THEN stmt_seq END
   11        | IF exp . THEN stmt_seq ELSE stmt_seq END

    THEN  shift, and go to state 30


State 20

   17 exp: simple_exp . LT simple_exp
   18    | simple_exp . EQ simple_exp
   19    | simple_exp . LE simple_exp
   20    | simple_exp . GT simple_exp
   21    | simple_exp . GE simple_exp
   22    | simple_exp . NE simple_exp
   23    | simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    EQ     shift, and go to state 31
    NE     shift, and go to state 32
    LE     shift, and go to state 33
    LT     shift, and go to state 34
    GE     shift, and go to state 35
    GT     shift, and go to state 36
    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 23 (exp)


State 21

   26 simple_exp: term .
   27 term: term . TIMES factor
   28     | term . OVER factor

    TIMES  shift, and go to state 39
    OVER   shift, and go to state 40

    $default  reduce using rule 26 (simple_exp)


State 22

   29 term: factor .

    $default  reduce using rule 29 (term)


State 23

    2 stmt_seq: stmt_seq . SEMI stmt
   12 repeat_stmt: REPEAT stmt_seq . UNTIL exp

    UNTIL  shift, and go to state 41
    SEMI   shift, and go to state 28


State 24

   15 read_stmt: READ ID .

    $default  reduce using rule 15 (read_stmt)


State 25

   16 write_stmt: WRITE exp .

    $default  reduce using rule 16 (write_stmt)


State 26

   14 assign_stmt: ID $@1 . ASSIGN exp

    ASSIGN  shift, and go to state 42


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 stmt_seq: stmt_seq SEMI . stmt

    error   shift, and go to state 1
    IF      shift, and go to state 2
    REPEAT  shift, and go to state 3
    READ    shift, and go to state 4
    WRITE   shift, and go to state 5
    ID      shift, and go to state 6

    stmt         go to state 43
    if_stmt      go to state 10
    repeat_stmt  go to state 11
    assign_stmt  go to state 12
    read_stmt    go to state 13
    write_stmt   go to state 14


State 29

   30 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 44


State 30

   10 if_stmt: IF exp THEN . stmt_seq END
   11        | IF exp THEN . stmt_seq ELSE stmt_seq END

    error   shift, and go to state 1
    IF      shift, and go to state 2
    REPEAT  shift, and go to state 3
    READ    shift, and go to state 4
    WRITE   shift, and go to state 5
    ID      shift, and go to state 6

    stmt_seq     go to state 45
    stmt         go to state 9
    if_stmt      go to state 10
    repeat_stmt  go to state 11
    assign_stmt  go to state 12
    read_stmt    go to state 13
    write_stmt   go to state 14


State 31

   18 exp: simple_exp EQ . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 46
    term        go to state 21
    factor      go to state 22


State 32

   22 exp: simple_exp NE . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 47
    term        go to state 21
    factor      go to state 22


State 33

   19 exp: simple_exp LE . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 48
    term        go to state 21
    factor      go to state 22


State 34

   17 exp: simple_exp LT . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 49
    term        go to state 21
    factor      go to state 22


State 35

   21 exp: simple_exp GE . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 50
    term        go to state 21
    factor      go to state 22


State 36

   20 exp: simple_exp GT . simple_exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    simple_exp  go to state 51
    term        go to state 21
    factor      go to state 22


State 37

   24 simple_exp: simple_exp PLUS . term

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    term    go to state 52
    factor  go to state 22


State 38

   25 simple_exp: simple_exp MINUS . term

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    term    go to state 53
    factor  go to state 22


State 39

   27 term: term TIMES . factor

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    factor  go to state 54


State 40

   28 term: term OVER . factor

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    factor  go to state 55


State 41

   12 repeat_stmt: REPEAT stmt_seq UNTIL . exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    exp         go to state 56
    simple_exp  go to state 20
    term        go to state 21
    factor      go to state 22


State 42

   14 assign_stmt: ID $@1 ASSIGN . exp

    error   shift, and go to state 15
    ID      shift, and go to state 16
    NUM     shift, and go to state 17
    LPAREN  shift, and go to state 18

    exp         go to state 57
    simple_exp  go to state 20
    term        go to state 21
    factor      go to state 22


State 43

    2 stmt_seq: stmt_seq SEMI stmt .

    $default  reduce using rule 2 (stmt_seq)


State 44

   30 factor: LPAREN exp RPAREN .

    $default  reduce using rule 30 (factor)


State 45

    2 stmt_seq: stmt_seq . SEMI stmt
   10 if_stmt: IF exp THEN stmt_seq . END
   11        | IF exp THEN stmt_seq . ELSE stmt_seq END

    ELSE  shift, and go to state 58
    END   shift, and go to state 59
    SEMI  shift, and go to state 28


State 46

   18 exp: simple_exp EQ simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 18 (exp)


State 47

   22 exp: simple_exp NE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 22 (exp)


State 48

   19 exp: simple_exp LE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 19 (exp)


State 49

   17 exp: simple_exp LT simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 17 (exp)


State 50

   21 exp: simple_exp GE simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 21 (exp)


State 51

   20 exp: simple_exp GT simple_exp .
   24 simple_exp: simple_exp . PLUS term
   25           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 20 (exp)


State 52

   24 simple_exp: simple_exp PLUS term .
   27 term: term . TIMES factor
   28     | term . OVER factor

    TIMES  shift, and go to state 39
    OVER   shift, and go to state 40

    $default  reduce using rule 24 (simple_exp)


State 53

   25 simple_exp: simple_exp MINUS term .
   27 term: term . TIMES factor
   28     | term . OVER factor

    TIMES  shift, and go to state 39
    OVER   shift, and go to state 40

    $default  reduce using rule 25 (simple_exp)


State 54

   27 term: term TIMES factor .

    $default  reduce using rule 27 (term)


State 55

   28 term: term OVER factor .

    $default  reduce using rule 28 (term)


State 56

   12 repeat_stmt: REPEAT stmt_seq UNTIL exp .

    $default  reduce using rule 12 (repeat_stmt)


State 57

   14 assign_stmt: ID $@1 ASSIGN exp .

    $default  reduce using rule 14 (assign_stmt)


State 58

   11 if_stmt: IF exp THEN stmt_seq ELSE . stmt_seq END

    error   shift, and go to state 1
    IF      shift, and go to state 2
    REPEAT  shift, and go to state 3
    READ    shift, and go to state 4
    WRITE   shift, and go to state 5
    ID      shift, and go to state 6

    stmt_seq     go to state 60
    stmt         go to state 9
    if_stmt      go to state 10
    repeat_stmt  go to state 11
    assign_stmt  go to state 12
    read_stmt    go to state 13
    write_stmt   go to state 14


State 59

   10 if_stmt: IF exp THEN stmt_seq END .

    $default  reduce using rule 10 (if_stmt)


State 60

    2 stmt_seq: stmt_seq . SEMI stmt
   11 if_stmt: IF exp THEN stmt_seq ELSE stmt_seq . END

    END   shift, and go to state 61
    SEMI  shift, and go to state 28


State 61

   11 if_stmt: IF exp THEN stmt_seq ELSE stmt_seq END .

    $default  reduce using rule 11 (if_stmt)
